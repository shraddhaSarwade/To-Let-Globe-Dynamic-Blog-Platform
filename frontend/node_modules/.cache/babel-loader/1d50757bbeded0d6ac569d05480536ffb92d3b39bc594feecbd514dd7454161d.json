{"ast":null,"code":"var _jsxFileName = \"/Users/shramol/Documents/Code/To-Let-Globe-Dynamic-Blog-Platform/frontend/src/BlogContainer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./BlogContanier.css\";\nimport BlogCard from \"./BlogCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BlogContainer() {\n  _s();\n  const [backendData, setBackendData] = useState([{}]);\n  useEffect(() => {\n    async function getDataFromBackend() {\n      const response = await fetch(\"/blogs\");\n      const allBlogs = await response.json();\n      setBackendData(allBlogs);\n    }\n    getDataFromBackend();\n  }, []);\n  console.log(backendData);\n  title, author, content, image, role, category, views, likes, date;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"container BlogContainer\",\n    children: [backendData.map((datapt, idx) => {\n      /*#__PURE__*/_jsxDEV(BlogCard, {\n        title: backendData[idx].title,\n        author: backendData[idx].author,\n        content: backendData[idx].content,\n        image: backendData[idx].image,\n        role: backendData[idx].role,\n        category: backendData[idx].category,\n        views: backendData[idx].views,\n        likes: backendData[idx].likes,\n        date: backendData[idx].date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(BlogCard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BlogCard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BlogCard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BlogCard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BlogCard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BlogCard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(BlogContainer, \"lSbdPEQgG/af9fOvqlnzEvHwb4Y=\");\n_c = BlogContainer;\nexport default BlogContainer;\nvar _c;\n$RefreshReg$(_c, \"BlogContainer\");","map":{"version":3,"names":["React","useState","useEffect","BlogCard","jsxDEV","_jsxDEV","BlogContainer","_s","backendData","setBackendData","getDataFromBackend","response","fetch","allBlogs","json","console","log","title","author","content","image","role","category","views","likes","date","class","children","map","datapt","idx","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/shramol/Documents/Code/To-Let-Globe-Dynamic-Blog-Platform/frontend/src/BlogContainer.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./BlogContanier.css\";\nimport BlogCard from \"./BlogCard\";\n\nfunction BlogContainer() {\n  const [backendData, setBackendData] = useState([{}]);\n\n  useEffect(() => {\n    async function getDataFromBackend() {\n      const response = await fetch(\"/blogs\");\n      const allBlogs = await response.json();\n      setBackendData(allBlogs);\n    }\n    getDataFromBackend();\n  }, []);\n\n  console.log(backendData);\n  title, author, content,image,role, category, views,likes, date \n\n  return (\n    <div class=\"container BlogContainer\">\n\n        {backendData.map((datapt,idx)=>{\n            <BlogCard title={backendData[idx].title} author={backendData[idx].author} content={backendData[idx].content} image={backendData[idx].image} role={backendData[idx].role} category={backendData[idx].category} views={backendData[idx].views} likes={backendData[idx].likes} date={backendData[idx].date}/>\n        })}\n      <BlogCard  />\n      <BlogCard />\n      <BlogCard />\n      <BlogCard />\n      <BlogCard />\n      <BlogCard />\n    </div>\n  );\n}\n\nexport default BlogContainer;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,qBAAqB;AAC5B,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACd,eAAeQ,kBAAkBA,CAAA,EAAG;MAClC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,QAAQ,CAAC;MACtC,MAAMC,QAAQ,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MACtCL,cAAc,CAACI,QAAQ,CAAC;IAC1B;IACAH,kBAAkB,CAAC,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EAENK,OAAO,CAACC,GAAG,CAACR,WAAW,CAAC;EACxBS,KAAK,EAAEC,MAAM,EAAEC,OAAO,EAACC,KAAK,EAACC,IAAI,EAAEC,QAAQ,EAAEC,KAAK,EAACC,KAAK,EAAEC,IAAI;EAE9D,oBACEpB,OAAA;IAAKqB,KAAK,EAAC,yBAAyB;IAAAC,QAAA,GAE/BnB,WAAW,CAACoB,GAAG,CAAC,CAACC,MAAM,EAACC,GAAG,KAAG;MAC3B,aAAAzB,OAAA,CAACF,QAAQ;QAACc,KAAK,EAAET,WAAW,CAACsB,GAAG,CAAC,CAACb,KAAM;QAACC,MAAM,EAAEV,WAAW,CAACsB,GAAG,CAAC,CAACZ,MAAO;QAACC,OAAO,EAAEX,WAAW,CAACsB,GAAG,CAAC,CAACX,OAAQ;QAACC,KAAK,EAAEZ,WAAW,CAACsB,GAAG,CAAC,CAACV,KAAM;QAACC,IAAI,EAAEb,WAAW,CAACsB,GAAG,CAAC,CAACT,IAAK;QAACC,QAAQ,EAAEd,WAAW,CAACsB,GAAG,CAAC,CAACR,QAAS;QAACC,KAAK,EAAEf,WAAW,CAACsB,GAAG,CAAC,CAACP,KAAM;QAACC,KAAK,EAAEhB,WAAW,CAACsB,GAAG,CAAC,CAACN,KAAM;QAACC,IAAI,EAAEjB,WAAW,CAACsB,GAAG,CAAC,CAACL;MAAK;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAC9S,CAAC,CAAC,eACJ7B,OAAA,CAACF,QAAQ;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACb7B,OAAA,CAACF,QAAQ;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACZ7B,OAAA,CAACF,QAAQ;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACZ7B,OAAA,CAACF,QAAQ;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACZ7B,OAAA,CAACF,QAAQ;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACZ7B,OAAA,CAACF,QAAQ;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAEV;AAAC3B,EAAA,CA7BQD,aAAa;AAAA6B,EAAA,GAAb7B,aAAa;AA+BtB,eAAeA,aAAa;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}